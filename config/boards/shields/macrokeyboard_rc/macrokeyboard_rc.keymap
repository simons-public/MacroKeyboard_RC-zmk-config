/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define TIMEOUT 300

&encoder_1 {
    status = "okay";
};

&encoder_2 {
    status = "okay";
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_btclr {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 0>;
            bindings = <&bt BT_CLR>;
        };

        combo_reset {
            timeout-ms = <TIMEOUT>;
            key-positions = <3 2>;
            bindings = <&sys_reset>;
        };

        combo_bootloader {
            timeout-ms = <TIMEOUT>;
            key-positions = <0 3>;
            bindings = <&bootloader>;
        };

        sleep {
            bindings = <&kp LG(LA(K_EJECT))>;
            key-positions = <1 2>;
        };

        lock {
            bindings = <&kp LG(LC(Q))>;
            key-positions = <5 6>;
        };
    };

    behaviors {
        /* DEPRECATED: `inc_dec_cp` will be removed in the future */
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1 &encoder_2>;
    };

    keymap0: keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default layer";
            bindings = <
&kp C_BRIGHTNESS_MINIMUM  &mo 2              &mo 3              &kp LC(LA(C_MUTE))
&kp LG(LC(F))             &kp C_PREV         &kp C_PLAY_PAUSE   &kp C_NEXT
&trans                    &kp LC(LG(SPACE))  &kp LG(LS(SPACE))  &kp LG(LS(KP_N4))
&to 1
            >;

            sensor-bindings =
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fn_layer {
            bindings = <
&kp HOME  &trans  &trans  &kp LG(N0)
&trans    &trans  &trans  &trans
&trans    &trans  &trans  &trans
&to 0
            >;

            sensor-bindings =
                <&inc_dec_kp PG_UP PG_DN>,
                <&inc_dec_kp LG(PLUS) LG(MINUS)>;
        };

        led_config {
            bindings = <
&trans           &trans           &trans           &rgb_ug RGB_TOG
&rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI
&rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD
&trans
            >;
        };

        config {
            bindings = <
&bt BT_CLR    &trans        &trans        &trans
&trans        &bt BT_PRV    &bt BT_SEL 0  &bt BT_NXT
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&bt BT_SEL 4
            >;
        };
    };
};
